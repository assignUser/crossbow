# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:


# TODO increase ccache max size

env:
#   ARROW_S3: ON
# MACOSX_DEPLOYMENT_TARGET: "11.0"
#   PYARROW_BUILD_VERBOSE: 1
#   PYARROW_VERSION: "5.0.0.dev372"
#   PYTHON_VERSION: "3.6"
#   PYTHON: "/Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6"
  VCPKG_DEFAULT_TRIPLET: arm64-osx-static-release
  VCPKG_FEATURE_FLAGS: "-manifests"
  VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/arrow/ci/vcpkg
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_VERSION: "2021.04.30"
  CMAKE_CXX_COMPILER_LAUNCHER: "ccache"
  CC: "clang"
  CXX: "clang++"

jobs:
  build:
    name: Build wheel for OS X
    runs-on: self-hosted
    steps:
      - name: Test
        shell: bash
        run: |
          pwd
          which cmake
          which clang
          which clang++
          xcrun --show-sdk-path
          xcrun --sdk macosx --show-sdk-path

      - name: Cleanup
        shell: bash
        run: rm -rf arrow vcpkg

      - name: Checkout Arrow
        run: |
          git clone --no-checkout https://github.com/kszucs/arrow arrow
          git -C arrow config core.symlinks true
          git -C arrow fetch -t https://github.com/kszucs/arrow m1
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive
      - name: Fetch Submodules and Tags
        shell: bash
        run: cd arrow && ci/scripts/util_checkout.sh

      # - name: Install System Dependencies
      #   run: brew install bash bison coreutils ninja cmake

      - name: Install Vcpkg
        shell: bash
        run: arch -arm64 arrow/ci/scripts/install_vcpkg.sh $VCPKG_VERSION $VCPKG_ROOT

      - name: Install Packages
        run: |
          arch -arm64 $VCPKG_ROOT/vcpkg install \
            abseil \
            aws-sdk-cpp[config,cognito-identity,core,identity-management,s3,sts,transfer] \
            boost-filesystem \
            brotli \
            bzip2 \
            c-ares \
            curl \
            flatbuffers \
            gflags \
            glog \
            grpc \
            lz4 \
            openssl \
            orc \
            protobuf \
            rapidjson \
            re2 \
            snappy \
            thrift \
            utf8proc \
            zlib \
            zstd

      # - name: Install Python 3.6
      #   shell: bash
      #   run: sudo arrow/ci/scripts/install_python.sh amd64 macos 3.6

      # - name: Install Virtualenvs for Building and Testing
      #   shell: bash
      #   run: |
      #     $PYTHON -m virtualenv build-env
      #     $PYTHON -m virtualenv test-env
      #     build-env/bin/pip install --upgrade pip wheel
      #     test-env/bin/pip install --upgrade pip wheel

      # - name: Build Wheel
      #   shell: bash
      #   run: |
      #     source build-env/bin/activate
      #     arrow/ci/scripts/python_wheel_macos_build.sh $(pwd)/arrow $(pwd)/build

      # - name: Test Wheel
      #   shell: bash
      #   run: |
      #     source test-env/bin/activate
      #     arrow/ci/scripts/python_wheel_macos_test.sh $(pwd)/arrow

      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.8
      # - name: Setup Crossbow
      #   shell: bash
      #   run: pip install -e arrow/dev/archery[crossbow]
      # - name: Upload artifacts
      #   shell: bash
      #   run: |
      #     archery crossbow \
      #     --queue-path $(pwd) \
      #     --queue-remote https://github.com/ursacomputing/crossbow.git \
      #     upload-artifacts \
      #     --sha build-446-github-wheel-osx-high-sierra-cp36 \
      #     --tag build-446-github-wheel-osx-high-sierra-cp36 \
      #     "arrow/python/dist/*.whl"
      #   env:
      #     CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

