# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:
    branches:
      - "*-github-*"


env:
  ARROW_S3: ON
  CC: "clang"
  CXX: "clang++"
  MACOSX_DEPLOYMENT_TARGET: "10.13"
  PYARROW_BUILD_VERBOSE: 1
  PYARROW_VERSION: "6.0.0.dev89"
  PYTHON_VERSION: "3.9"
  PYTHON: "/Library/Frameworks/Python.framework/Versions/3.9/bin/python3.9"
  VCPKG_DEFAULT_TRIPLET: x64-osx-static-release
  VCPKG_FEATURE_FLAGS: "-manifests"
  VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/arrow/ci/vcpkg
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  VCPKG_VERSION: "2021.04.30"

jobs:
  build:
    name: Build wheel for OS X
    runs-on: macos-10.15
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout https://github.com/apache/arrow arrow
          git -C arrow config core.symlinks true
          git -C arrow fetch -t https://github.com/apache/arrow master
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive
      - name: Fetch Submodules and Tags
        shell: bash
        run: cd arrow && ci/scripts/util_checkout.sh


      - name: Install System Dependencies
        run: brew install bash bison coreutils ninja cmake

      - uses: actions/cache@v2
        id: vcpkg-cache
        with:
          path: vcpkg
          key: vcpkg-10.13-2021.04.30-${{ hashFiles('arrow/ci/vcpkg/*.patch', 'arrow/ci/vcpkg/*osx*.cmake') }}

      - name: Install Vcpkg
        if: steps.vcpkg-cache.outputs.cache-hit != 'true'
        shell: bash
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.15"
        run: arrow/ci/scripts/install_vcpkg.sh $VCPKG_VERSION $VCPKG_ROOT

      - name: Install Packages
        run: |
          $VCPKG_ROOT/vcpkg install \
            abseil \
            boost-filesystem \
            brotli \
            bzip2 \
            c-ares \
            curl \
            flatbuffers \
            gflags \
            glog \
            grpc \
            lz4 \
            openssl \
            orc \
            protobuf \
            rapidjson \
            re2 \
            snappy \
            thrift \
            utf8proc \
            zlib \
            zstd

      - name: Install AWS SDK C++
        run: $VCPKG_ROOT/vcpkg install aws-sdk-cpp[config,cognito-identity,core,identity-management,s3,sts,transfer]

      - name: Install Python 3.9
        shell: bash
        run: sudo arrow/ci/scripts/install_python.sh macos 3.9

      - name: Build Wheel
        shell: bash
        run: |
          $PYTHON -m virtualenv build-env
          source build-env/bin/activate
          pip install --upgrade pip wheel
          arrow/ci/scripts/python_wheel_macos_build.sh x86_64 $(pwd)/arrow $(pwd)/build

      - name: Test Wheel
        shell: bash
        run: |
          $PYTHON -m virtualenv test-env
          source test-env/bin/activate
          pip install --upgrade pip wheel
          arrow/ci/scripts/python_wheel_unix_test.sh $(pwd)/arrow

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup Crossbow
        shell: bash
        run: pip install -e arrow/dev/archery[crossbow-upload]
      - name: Upload artifacts
        shell: bash
        run: |
          archery crossbow \
          --queue-path $(pwd) \
          --queue-remote https://github.com/ursacomputing/crossbow \
          upload-artifacts \
          --sha nightly-2021-08-16-0-github-wheel-macos-high-sierra-cp39-amd64 \
          --tag nightly-2021-08-16-0-github-wheel-macos-high-sierra-cp39-amd64 \
          "arrow/python/repaired_wheels/*.whl"
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Upload package to Gemfury
        shell: bash
        run: |
          path=$(ls arrow/python/repaired_wheels/*.whl)
          curl -F "package=@${path}" https://${CROSSBOW_GEMFURY_TOKEN}@push.fury.io/${CROSSBOW_GEMFURY_ORG}/
        env:
          CROSSBOW_GEMFURY_TOKEN: ${{ secrets.CROSSBOW_GEMFURY_TOKEN }}
          CROSSBOW_GEMFURY_ORG: ${{ secrets.CROSSBOW_GEMFURY_ORG }}
