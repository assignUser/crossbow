# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow

on:
  push

jobs:
  grab-dependencies:
    name: "Download thirdparty dependencies"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    env:
      ARROW_R_DEV: "TRUE"
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout https://github.com/karldw/arrow.git arrow
          git -C arrow fetch -t https://github.com/karldw/arrow.git fix-12981
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive
      - name: Free Up Disk Space
        shell: bash
        run: arrow/ci/scripts/util_cleanup.sh
      - name: Fetch Submodules and Tags
        shell: bash
        run: cd arrow && ci/scripts/util_checkout.sh
      - uses: r-lib/actions/setup-r@v1
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "glue", "sys"))
          remotes::install_deps("arrow/r", dependencies = TRUE)
        shell: Rscript {0}
      - name: Pull Arrow dependencies
        run: |
          cd arrow/r
          # copy the two files we will need
          # TODO: allow manually specifying `download_dependencies.sh` in `download_optional_dependencies()` then we won't need to install
          mkdir -p inst/thirdparty/
          cp -p ../cpp/thirdparty/download_dependencies.sh inst/thirdparty/
          cp -p ../cpp/thirdparty/versions.txt inst/thirdparty/
          R CMD INSTALL .
          mkdir thirdparty_deps
          R -e download_optional_dependencies("thirdparty_deps")
        shell: bash
      - name: Upload the third party dependency artifacts
        uses: actions/upload-artifact@v2
        with:
          name: thirdparty_deps
          path: arrow/r/thirdparty_deps

  intall-offline:
    name: "Install offline"
    needs: [grab-dependencies]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    env:
      ARROW_R_DEV: "TRUE"
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
    steps:
      - name: Checkout Arrow
        run: |
          git clone --no-checkout https://github.com/karldw/arrow.git arrow
          git -C arrow fetch -t https://github.com/karldw/arrow.git fix-12981
          git -C arrow checkout FETCH_HEAD
          git -C arrow submodule update --init --recursive
      - uses: r-lib/actions/setup-r@v1
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: thirdparty_deps
          path: thirdparty_deps
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "glue", "sys"))
          remotes::install_deps("arrow/r", dependencies = TRUE)
        shell: Rscript {0}
      - name: Install
        env:
          TEST_OFFLINE_BUILD: true
          LIBARROW_MINIMAL: false
          ARROW_R_DEV: TRUE
          ARROW_THIRDPARTY_DEPENDENCY_DIR: ~/thirdparty_deps
        run: |
          cd arrow/r
          R CMD INSTALL . --install-tests
      - name: Run the tests
        run: R -e 'if(tools::testInstalledPackage("arrow") != 0L) stop("There was a test failure.")'
      - name: Dump test logs
        run: cat arrow-tests/testthat.Rout*
        if: failure()
      - name: Save the test output
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: arrow-tests/testthat.Rout*
        if: always()