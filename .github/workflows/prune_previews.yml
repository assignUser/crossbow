name: Prune Previews

on:
  push:
    paths:
      - '.github/workflows/prune_previews.yml'
  schedule:
    - cron: '05 2 * * *'

jobs:
  remove:
    name: Remove Stale Previews
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Crossbow
        uses: actions/checkout@v3

        with:
          fetch-depth: 0
      - name: Find PRs
        run: |
          cd docs/pr_docs
          echo "PRs=$(ls -d * | tr '\n' ' ')" >> $GITHUB_ENV
      - name: Find open PRs
        uses: actions/github-script@v5
        id: find
        with:
          script: |
            let prs = "${{ env.PRs }}".split(" ").filter(x => x)
            async function not_open(id) {
             let pr = await github.rest.pulls.get({
              "owner": "apache",
              "repo": "arrow",
              "pull_number": id
              })
              
              if(pr.data.state !== "open") {
                return(id)
              }
              return("")
            }

            let del_prs = await Promise.all(prs.map(not_open))
            del_prs = del_prs.filter(x => x).join(" ")
            console.log(`::set-output name=del_prs::${del_prs}`)
      - name: Delete Dirs and Commit
        if: steps.find.outputs.del_prs != ''
        env:
          pr_ids: ${{ steps.find.outputs.del_prs }}
        run: |      
          git config --local user.name "Github Actions"
          git config --local user.email "github-actions@users.noreply.github.com"

          ids=($pr_ids)
          git rm -r  $(printf 'docs/pr_docs/%s ' "${ids[@]}")

          git commit -m "Remove stale previews"
          git push
          
